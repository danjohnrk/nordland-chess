import { getAllMatches } from "@/mockapi/matchApi";
import { getAllUsers } from "@/mockapi/userApi";
import { LoadingSpinner } from "@/src/components/LoadingSpinner/LoadingSpinner";
import { MatchList } from "@/src/components/MatchList/MatchList";
import PageButton from "@/src/components/PageButton/PageButton";
import { UserList } from "@/src/components/UserList/UserList";
import AuthContext from "@/stores/authContext";
import styles from "@/styles/Home.module.css";
import Head from "next/head";
import Image from "next/image";
import Link from "next/link";
import { useContext, useEffect, useState } from "react";
import { useQuery } from "react-query";

export default function Home() {
  const { user, users, login, logout, loadingUsers } = useContext(AuthContext);

  const [userIsActive, setUserIsActive] = useState(false);
  const [activating, setActivating] = useState(false);

  const {
    isLoading: matchLoading,
    error,
    data: matches,
  } = useQuery("matchData", () =>
    fetch("https://nrk-chess-api.onrender.com/match/all").then((res) =>
      res.json()
    )
  );

  useEffect(() => {
    if (users != null && user != null) {
      users.forEach((currentUser) => {
        if (currentUser.netlifyId === user.id) {
          setUserIsActive(true);
        }
      });
    }
  }, [users, user]);

  const activateUser = () => {
    setActivating(true);

    setTimeout(() => {
      fetch("https://nrk-chess-api.onrender.com/user", {
        method: "POST",
        headers: {
          "Content-Type": "application/json",
        },
        body: JSON.stringify({
          netlifyId: user.id,
          name: user.user_metadata.full_name,
        }),
      }).then((data) => {
        location.reload();
      });
    }, 3000);
  };

  return (
    <>
      <Head>
        <title>Nordland Chess</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <meta http-equiv="refresh" content="900" />
        <link rel="icon" href="/chess-board-logo.svg" />
      </Head>
      <div className={styles.header}>
        <Image
          src="/chess-board-logo-orange.svg"
          alt="nordland chess logo"
          width={48}
          height={48}
          className={styles.headerIcon}
        />
        <span className={styles.headerTitle}>Nordland chess</span>
      </div>
      <main className={styles.main}>
        {user !== null && (
          <>
            <section className={styles.listSection}>
              <PageButton type="profile" />
              <span className={styles.seperator}></span>
              <PageButton type="match-list" />
              <span className={styles.seperator}></span>
              <PageButton type="user-list" />
              <span className={styles.seperator}></span>
              <PageButton type="chess-board" />
              <span className={styles.seperator}></span>
              <PageButton type="display" />
            </section>
            <Link href="/new-match">
              <div className={styles.registerMatchButton}>Registrer match</div>
            </Link>
            <button className={styles.logoutButton} onClick={logout}>
              Logg ut
            </button>
          </>
        )}
        {user === null && (
          <button className={styles.loginButton} onClick={login}>
            Logg inn
          </button>
        )}
      </main>
    </>
  );
}
