import { LoadingSpinner } from "@/src/components/LoadingSpinner/LoadingSpinner";
import PageButton from "@/src/components/PageButton/PageButton";
import AuthContext from "@/stores/authContext";
import styles from "@/styles/Home.module.css";
import Head from "next/head";
import Image from "next/image";
import Link from "next/link";
import { useContext, useEffect, useState } from "react";

export default function Home() {
  const { user, users, login, logout } = useContext(AuthContext);

  const [userIsActive, setUserIsActive] = useState(false);
  const [activating, setActivating] = useState(false);

  useEffect(() => {
    if (users != null && user != null) {
      users.forEach((currentUser) => {
        if (currentUser.netlifyId === user.id) {
          setUserIsActive(true);
        }
      });
    }
  }, [users, user]);

  // const activateUser = () => {
  //   setActivating(true);

  //   setTimeout(() => {
  //     fetch("https://nrk-chess-api.onrender.com/user", {
  //       method: "POST",
  //       headers: {
  //         "Content-Type": "application/json",
  //       },
  //       body: JSON.stringify({
  //         netlifyId: user.id,
  //         name: user.user_metadata.full_name,
  //       }),
  //     }).then((data) => {
  //       location.reload();
  //     });
  //   }, 3000);
  // };

  const activateUser = async () => {
    setActivating(true);

    setTimeout(() => {
      fetch(
        `/api/user?netlifyId=${user.id}&name=${user.user_metadata.full_name}`,
        {
          headers: {
            Accept: "application/json",
          },
        }
      )
        .then((data) => {
          console.log(data);
          //location.reload();
        })
        .catch((err) => console.log(err));
    }, 3000);
  };

  return (
    <>
      <Head>
        <title>Nordland Chess</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <meta http-equiv="refresh" content="900" />
        <link rel="icon" href="/chess-board-logo.svg" />
      </Head>
      <div className={styles.header}>
        <Image
          src="/chess-board-logo-orange.svg"
          alt="nordland chess logo"
          width={48}
          height={48}
          className={styles.headerIcon}
        />
        <span className={styles.headerTitle}>Nordland chess</span>
      </div>
      <main className={styles.main}>
        {user !== null && userIsActive === true && (
          <>
            <section className={styles.listSection}>
              <PageButton type="profile" />
              <span className={styles.seperator}></span>
              <PageButton type="match-list" />
              <span className={styles.seperator}></span>
              <PageButton type="user-list" />
              <span className={styles.seperator}></span>
              <PageButton type="chess-board" />
              <span className={styles.seperator}></span>
              <PageButton type="display" />
            </section>
            <Link href="/new-match">
              <div className={styles.registerMatchButton}>Registrer match</div>
            </Link>
            <div className={styles.logoutButtonContainer}>
              <button className={styles.logoutButton} onClick={logout}>
                Logg ut
              </button>
            </div>
          </>
        )}
        {user === null && (
          <>
            <button className={styles.loginButton} onClick={login}>
              Logg inn / Registrer
            </button>
          </>
        )}
        {userIsActive === false && user != null && activating === false && (
          <>
            <div className={styles.welcomeScreen}>
              <h2>Velkommen!</h2>
              <p>Profilen din er snart klart til bruk</p>
              <button className={styles.activateButton} onClick={activateUser}>
                Aktiver brukeren din her!
              </button>
            </div>
            <div className={styles.logoutButtonContainer}>
              <button className={styles.logoutButton} onClick={logout}>
                Avbryt
              </button>
            </div>
          </>
        )}
        {activating === true && (
          <div className={styles.activatingScreen}>
            <h2>Aktiverer bruker...</h2>
            <LoadingSpinner />
          </div>
        )}
      </main>
    </>
  );
}
